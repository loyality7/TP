{
  "title": "Aptitude and Programming Test 5 ",
  "description": "A comprehensive test for MITS students covering Quantitative Aptitude (R.S. Agarwal), Basic Programming, and Problem Solving skills.",
  "duration": 210,
  "proctoring": true,
  "type": "coding_challenge",
  "category": "Aptitude and Programming",
  "difficulty": "beginner",
  "instructions": "1. Complete all sections: Aptitude MCQs and Programming Questions\n2. Each coding solution must handle basic test cases\n3. Time management is crucial - attempt all questions\n4. Read each question carefully before answering",
  "mcqs": [
    {
      "question": "What is the output of the following pseudocode?\n\n```\nBEGIN\n  SET x TO 4\n  SET y TO x * x\n  PRINT y\nEND\n```",
      "options": [
        "4",
        "8",
        "16",
        "20"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "y is set to 4 * 4 = 16, which is printed."
    },
    {
      "question": "Which pseudocode construct is used to execute code based on different cases?",
      "options": [
        "IF...THEN...ELSE",
        "FOR...END_FOR",
        "SWITCH...CASE",
        "WHILE...DO"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'SWITCH...CASE' is used to execute code based on different conditions."
    },
    {
      "question": "What is the purpose of initializing variables before using them in pseudocode?",
      "options": [
        "To allocate memory",
        "To set a starting value",
        "To define their data type",
        "All of the above"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "Initializing variables sets their starting value, which is essential for accurate computations."
    },
    {
      "question": "What does the 'END_WHILE' keyword signify in pseudocode?",
      "options": [
        "The start of a while loop",
        "The end of a while loop",
        "A condition within a while loop",
        "None of the above"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'END_WHILE' indicates the termination of a WHILE loop."
    },
    {
      "question": "In pseudocode, how would you represent a decision to execute code only if a number is even?",
      "options": [
        "IF number MOD 2 == 0 THEN",
        "WHILE number MOD 2 == 0",
        "FOR number FROM 2 TO n",
        "SET number TO EVEN"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'IF number MOD 2 == 0 THEN' checks if a number is even."
    },
    {
      "question": "What is the role of the 'SET' command in pseudocode?",
      "options": [
        "To declare a variable",
        "To assign a value to a variable",
        "To print a variable's value",
        "To start a loop"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'SET' assigns a value to a variable."
    },
    {
      "question": "What does the following pseudocode print?\n\n```\nBEGIN\n  SET a TO 2\n  SET b TO 3\n  PRINT a + b * 4\nEND\n```",
      "options": [
        "20",
        "14",
        "5",
        "Error"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "According to order of operations, b * 4 =12; then a +12 =14."
    },
    {
      "question": "Which construct is used to execute a block of code at least once before checking a condition?",
      "options": [
        "WHILE loop",
        "FOR loop",
        "DO...WHILE loop",
        "IF...THEN...ELSE"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "hard",
      "explanation": "'DO...WHILE' ensures the block executes at least once before condition checking."
    },
    {
      "question": "What is the output of the following pseudocode?\n\n```\nBEGIN\n  SET x TO 1\n  FOR i FROM 1 TO 3\n    SET x TO x + i\n  END_FOR\n  PRINT x\nEND\n```",
      "options": [
        "3",
        "6",
        "7",
        "9"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "x =1+1=2; then 2+2=4; then 4+3=7."
    },
    {
      "question": "In pseudocode, what does the 'MOD' operator represent?",
      "options": [
        "Multiplication",
        "Division",
        "Modulus (remainder)",
        "Exponentiation"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'MOD' returns the remainder after division."
    },
    {
      "question": "What is the purpose of the 'BEGIN' keyword in pseudocode?",
      "options": [
        "To start the pseudocode",
        "To define a loop",
        "To declare a variable",
        "To end the pseudocode"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'BEGIN' signifies the start of the pseudocode."
    },
    {
      "question": "What does the 'ELSE' keyword do in an IF statement in pseudocode?",
      "options": [
        "Begins a new IF condition",
        "Specifies an alternative block if the IF condition is false",
        "Ends the IF statement",
        "Repeats the IF condition"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'ELSE' provides an alternative block of code if the IF condition is false."
    },
    {
      "question": "How would you represent an infinite loop in pseudocode?",
      "options": [
        "FOR i FROM 1 TO INFINITY",
        "WHILE TRUE DO",
        "REPEAT UNTIL FALSE",
        "All of the above"
      ],
      "correctOptions": [3],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "hard",
      "explanation": "All listed options can be used to create infinite loops in pseudocode."
    },
    {
      "question": "What is the final value of 'sum' after executing the following pseudocode?\n\n```\nBEGIN\n  SET sum TO 0\n  FOR i FROM 1 TO 4\n    SET sum TO sum + i\n  END_FOR\nEND\n```",
      "options": [
        "6",
        "10",
        "15",
        "5"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "sum =1+2+3+4=10"
    },
    {
      "question": "Which keyword signifies the end of a function in pseudocode?",
      "options": [
        "END_FUNCTION",
        "FINISH",
        "CLOSE",
        "END"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'END_FUNCTION' denotes the termination of a function block."
    },
    {
      "question": "If MOUSE is written as PRUQC, then how will SHIFT be written in that code?",
      "options": [
        "UJKHV",
        "QFGDV",
        "UJKDV",
        "QJKDV"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-1",
      "difficulty": "medium",
      "explanation": "Each letter is replaced by the letter 2 positions before it in the alphabet. Therefore, SHIFT becomes QFGDV"
    },
    {
      "question": "In a certain code language, if TERMINAL = 1234567890, then MINERAL = ?",
      "options": [
        "45632789",
        "46532789",
        "45623789",
        "46523789"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-1",
      "difficulty": "medium",
      "explanation": "Using the same position values from TERMINAL, MINERAL would be 45623789"
    },
    {
      "question": "If 'P' means '×', 'Q' means '÷', 'R' means '+' and 'S' means '-', then what will be the value of 8 P 6 Q 2 R 4 S 2?",
      "options": [
        "26",
        "24",
        "28",
        "22"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-1",
      "difficulty": "hard",
      "explanation": "8 × 6 ÷ 2 + 4 - 2 = 48 ÷ 2 + 4 - 2 = 24 + 4 - 2 = 26"
    },
    {
      "question": "Which one will replace the question mark? 2, 6, 12, 20, 30, 42, ?",
      "options": [
        "56",
        "54",
        "58",
        "60"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-1",
      "difficulty": "medium",
      "explanation": "The pattern is +4, +6, +8, +10, +12, +14. So next number is 42+14=56"
    },
    {
      "question": "If FRIEND is coded as HUMJTK, how is CANDLE coded?",
      "options": [
        "EDRJQG",
        "DCQIKG",
        "ECPFNG",
        "ECOFNG"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-1",
      "difficulty": "medium",
      "explanation": "Each letter is moved 2 positions forward in the alphabet. Therefore, CANDLE becomes DCQIKG"
    },
    {
      "question": "What is the output of the following pseudocode snippet?\n\n```\nBEGIN\n  SET sum TO 0\n  FOR i FROM 1 TO 5\n    SET sum TO sum + i\n  END_FOR\n  PRINT sum\nEND\n```",
      "options": [
        "5",
        "10",
        "15",
        "20"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "It calculates the sum 1+2+3+4+5 = 15 and prints the result."
    },
    {
      "question": "In pseudocode, which of the following represents a loop that repeats until a condition is false?",
      "options": [
        "IF...THEN...ELSE",
        "FOR...TO...STEP",
        "WHILE...DO",
        "FUNCTION...END_FUNCTION"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'WHILE...DO' loop continues to repeat as long as the condition is true."
    },
    {
      "question": "What is the output of this pseudocode?\n\n```\nBEGIN\n  SET a TO 10\n  SET b TO 20\n  IF a > b THEN\n    PRINT \"A is greater\"\n  ELSE\n    PRINT \"B is greater\"\n  END_IF\nEND\n```",
      "options": [
        "A is greater",
        "B is greater",
        "A and B are equal",
        "No output"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "Since 10 < 20, it prints 'B is greater'."
    },
    {
      "question": "What is missing in the following pseudocode to correctly compute the factorial of a number?\n\n```\nBEGIN\n  SET n TO 5\n  SET factorial TO 1\n  FOR i FROM 1 TO n\n    SET factorial TO factorial * i\n  // Missing end\n  PRINT factorial\nEND\n```",
      "options": [
        "END_FOR",
        "END_IF",
        "END_LOOP",
        "Nothing, it is correct"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "hard",
      "explanation": "Proper closure of the FOR loop is needed with 'END_FOR'."
    },
    {
      "question": "In pseudocode, what keyword is used to stop the execution of a loop prematurely?",
      "options": [
        "EXIT",
        "BREAK",
        "STOP",
        "Both A and B"
      ],
      "correctOptions": [3],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "Both 'EXIT' and 'BREAK' can be used to terminate loops early."
    },
    {
      "question": "What is the value of 'x' after executing the following pseudocode?\n\n```\nBEGIN\n  SET x TO 0\n  FOR i FROM 1 TO 4\n    SET x TO x + i\n  END_FOR\nEND\n```",
      "options": [
        "4",
        "6",
        "10",
        "15"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "x = 1+2+3+4 = 10"
    },
    {
      "question": "What does the 'READ' command do in pseudocode?",
      "options": [
        "Outputs data to the screen.",
        "Takes input from the user.",
        "Executes a function.",
        "Initializes variables."
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'READ' is used to take input from the user."
    },
    {
      "question": "How do you represent an array in pseudocode?",
      "options": [
        "ARRAY A[5]",
        "DECLARE A AS ARRAY OF 5",
        "SET A TO {1,2,3,4,5}",
        "All of the above"
      ],
      "correctOptions": [3],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "Various syntaxes can represent arrays in pseudocode."
    },
    {
      "question": "What is the output of the following pseudocode?\n\n```\nBEGIN\n  SET a TO 3\n  SET b TO a * a\n  SET a TO 5\n  PRINT b\nEND\n```",
      "options": [
        "3",
        "5",
        "9",
        "25"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "b is set to 3*3=9 before a is changed to 5."
    },
    {
      "question": "Which construct is used to repeat a block of code as long as a condition holds true in pseudocode?",
      "options": [
        "IF",
        "FOR",
        "REPEAT...UNTIL",
        "SWITCH"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'REPEAT...UNTIL' is used to repeat a block until a condition becomes true."
    },
    {
      "question": "What is wrong with the following pseudocode?\n\n```\nBEGIN\n  SET x TO 10\n  SET y TO 20\n  SET z TO x + y\n  PRINT z\n```",
      "options": [
        "Missing END",
        "Missing BEGIN",
        "No errors",
        "Missing END_PRINT"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "There is no 'END' to signify the end of the block."
    },
    {
      "question": "How would you declare a variable 'total' in pseudocode?",
      "options": [
        "SET total",
        "DECLARE total AS INTEGER",
        "INTEGER total",
        "Both B and C"
      ],
      "correctOptions": [3],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "In pseudocode, variables can be declared using 'DECLARE' or by specifying type before the name."
    },
    {
      "question": "What is the output of the following pseudocode?\n\n```\nBEGIN\n  SET sum TO 0\n  SET i TO 1\n  WHILE i <= 5\n    SET sum TO sum + i\n    SET i TO i + 1\n  END_WHILE\n  PRINT sum\nEND\n```",
      "options": [
        "5",
        "10",
        "15",
        "20"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "Sum of 1+2+3+4+5 = 15"
    },
    {
      "question": "Which of the following is a conditional loop in pseudocode?",
      "options": [
        "FOR",
        "WHILE",
        "REPEAT",
        "All of the above"
      ],
      "correctOptions": [3],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "All listed options can be used for conditional loops."
    },
    {
      "question": "In pseudocode, how do you represent the start of a loop that runs indefinitely?",
      "options": [
        "FOR i FROM 1 TO INFINITY",
        "WHILE TRUE DO",
        "LOOP UNTIL FALSE",
        "All of the above"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "hard",
      "explanation": "'WHILE TRUE DO' represents an infinite loop."
    },
    {
      "question": "What is the correct pseudocode to calculate the sum of elements in an array A of size n?",
      "options": [
        "BEGIN\n  SET sum TO 0\n  FOR i FROM 1 TO n\n    SET sum TO sum + A[i]\n  END_FOR\n  PRINT sum\nEND",
        "BEGIN\n  SET sum TO A[1]\n  FOR i FROM 2 TO n\n    SET sum TO sum * A[i]\n  END_FOR\n  PRINT sum\nEND",
        "BEGIN\n  SET sum TO 0\n  WHILE i < n\n    SET sum TO sum + A[i]\n    SET i TO i +1\n  END_WHILE\n  PRINT sum\nEND",
        "All of the above"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "hard",
      "explanation": "Option A correctly sums the elements; others perform different operations or have issues."
    },
    {
      "question": "In pseudocode, how can you comment a line?",
      "options": [
        "// This is a comment",
        "/* This is a comment */",
        "# This is a comment",
        "All of the above"
      ],
      "correctOptions": [3],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "Various commenting styles can be used in pseudocode."
    },
    {
      "question": "What is the output of the following pseudocode?\n\n```\nBEGIN\n  SET a TO 5\n  SET b TO a * 2\n  SET a TO 3\n  PRINT b\nEND\n```",
      "options": [
        "5",
        "3",
        "10",
        "6"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "b is set to 5*2=10 before a is changed to 3."
    },
    {
      "question": "Which pseudocode construct is used for decision-making based on multiple conditions?",
      "options": [
        "IF...THEN",
        "ELSE IF...THEN",
        "SWITCH...CASE",
        "All of the above"
      ],
      "correctOptions": [3],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "All listed constructs can handle multiple condition decisions."
    },
    {
      "question": "What does the following pseudocode do?\n\n```\nBEGIN\n  SET total TO 0\n  FOR i FROM 1 TO 3\n    SET j TO 1\n    WHILE j <= i\n      SET total TO total + j\n      SET j TO j + 1\n    END_WHILE\n  END_FOR\n  PRINT total\nEND\n```",
      "options": [
        "Sums numbers from 1 to 3",
        "Calculates the factorial of 3",
        "Prints 6",
        "Prints 10"
      ],
      "correctOptions": [3],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "hard",
      "explanation": "The nested loops add 1 + (1+2) + (1+2+3) = 10."
    },
    {
      "question": "In a row of boys, A is 7th from the left and B is 12th from the right. If A is 8th from the right, what is B's position from the left?",
      "options": [
        "3",
        "12",
        "13",
        "14"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-1",
      "difficulty": "medium",
      "explanation": "Total boys = (7 + 8 - 1) = 14. B is 12th from right, so from left B is (14 - 12 + 1) = 3rd position"
    },
    {
      "question": "If in a certain language, MADRAS is coded as NBESBT, how is BOMBAY coded in that code?",
      "options": [
        "CPNCBZ",
        "CPNCBX",
        "CPOCBZ",
        "CQOCBZ"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-1",
      "difficulty": "medium",
      "explanation": "Each letter is replaced by the next letter in the alphabet. Therefore, BOMBAY becomes CPNCBZ"
    },
    {
      "question": "Choose the word that is closest in meaning to 'BENEVOLENT'",
      "options": [
        "Kind",
        "Hostile",
        "Cruel",
        "Indifferent"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "Benevolent means 'kind and generous', making 'Kind' the closest synonym."
    },
    {
      "question": "Select the correct meaning of the idiom: 'Beat around the bush'",
      "options": [
        "To search in the wild",
        "To avoid coming directly to the point",
        "To create confusion",
        "To waste time"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "To 'beat around the bush' means to avoid addressing a subject directly."
    },
    {
      "question": "Choose the antonym of 'AUDACIOUS'",
      "options": [
        "Timid",
        "Bold",
        "Brave",
        "Daring"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "Audacious means 'bold and daring', so its antonym is 'Timid'."
    },
    {
      "question": "Identify the correctly spelled word:",
      "options": [
        "Accomodate",
        "Accommodate",
        "Acommodate",
        "Accommodete"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "The correct spelling is 'Accommodate' with two 'c's and two 'm's."
    },
    {
      "question": "Choose the sentence with correct subject-verb agreement:",
      "options": [
        "The group of students were playing.",
        "The group of students was playing.",
        "The group of students is playing.",
        "The group of students have playing."
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'Group' is a collective noun and takes a singular verb 'was'."
    },
    {
      "question": "What is the plural form of 'criterion'?",
      "options": [
        "Criterions",
        "Criteria",
        "Criterias",
        "Criterion's"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "The plural of 'criterion' is 'criteria', following Greek plural formation rules."
    },
    {
      "question": "Choose the correct meaning of the phrase 'In the nick of time'",
      "options": [
        "Very late",
        "Just in time",
        "Before time",
        "After time"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'In the nick of time' means just at the right moment or just in time."
    },
    {
      "question": "Which word best completes the sentence: 'The mountain climber showed great _____ in reaching the summit.'",
      "options": [
        "Fortitude",
        "Latitude",
        "Gratitude",
        "Attitude"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'Fortitude' means courage in pain or adversity, making it the most appropriate choice."
    },
    {
      "question": "Identify the passive voice: 'The letter _____ yesterday.'",
      "options": [
        "was written",
        "was writing",
        "wrote",
        "had written"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'Was written' is in passive voice, where the subject receives the action."
    },
    {
      "question": "Choose the correct article to complete: '_____ European Union has 27 member states.'",
      "options": [
        "A",
        "An",
        "The",
        "No article needed"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'The' is used before unique entities and organizations."
    },
    {
      "question": "What is the meaning of the prefix 'inter-'?",
      "options": [
        "Between",
        "Inside",
        "Against",
        "Beyond"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "The prefix 'inter-' means 'between' or 'among', as in 'international' or 'interact'."
    },
    {
      "question": "Choose the correct form of the verb: 'Each of the students _____ to submit their assignments.'",
      "options": [
        "have",
        "has",
        "were",
        "are"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "When using 'each of', the verb should be singular."
    },
    {
      "question": "Identify the figure of speech: 'The wind whispered through the trees.'",
      "options": [
        "Metaphor",
        "Simile",
        "Personification",
        "Hyperbole"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "This is personification as it attributes human qualities (whispering) to non-human things (wind)."
    },
    {
      "question": "Choose the word with the correct prefix to mean 'against': '_____ bacterial'",
      "options": [
        "in-",
        "un-",
        "anti-",
        "non-"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "The prefix 'anti-' means 'against' or 'opposing'."
    },
    {
      "question": "Select the correct homophone: 'The ship dropped its _____.'",
      "options": [
        "anchor",
        "anker",
        "ancor",
        "ankhor"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'Anchor' is the correct spelling for a ship's mooring device."
    },
    {
      "question": "What is the meaning of the idiom 'Apple of one's eye'?",
      "options": [
        "Something very expensive",
        "Someone's favorite",
        "A rare fruit",
        "A type of eye disease"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'Apple of one's eye' refers to someone who is very dear or precious to another person."
    },
    {
      "question": "Choose the correct word order: 'He (1)bought (2)yesterday (3)a car (4)new'",
      "options": [
        "1-2-3-4",
        "1-3-4-2",
        "2-1-3-4",
        "1-2-4-3"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "The correct word order is 'He bought a new car yesterday.'"
    },
    {
      "question": "Identify the type of sentence: 'What a beautiful sunset!'",
      "options": [
        "Declarative",
        "Interrogative",
        "Exclamatory",
        "Imperative"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "This is an exclamatory sentence expressing strong emotion or feeling."
    },
    {
      "question": "Choose the correct comparative form: 'This is the _____ day of my life.'",
      "options": [
        "better",
        "good",
        "best",
        "well"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'Best' is the superlative form used when comparing more than two things."
    },
    {
      "question": "Select the sentence with correct punctuation:",
      "options": [
        "John said that he was tired",
        "John said, that he was tired",
        "John said that, he was tired",
        "John said that he was tired."
      ],
      "correctOptions": [3],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "A period is needed at the end of a declarative sentence."
    },
    {
      "question": "What will be the output of this pseudocode?\nA = 5\nB = 3\nWHILE A > 0\n  B = B + 1\n  A = A - 1\nPRINT B",
      "options": [
        "3",
        "5",
        "8",
        "15"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-4",
      "difficulty": "medium",
      "explanation": "Loop runs 5 times. Each time B increases by 1. Starting from 3, after 5 iterations: 3+5=8"
    },
    {
      "question": "In the following pseudocode, what is the value of SUM?\nSUM = 0\nFOR i = 1 TO 5\n  IF i MOD 2 = 0\n    SUM = SUM + i\nENDFOR",
      "options": [
        "6",
        "9",
        "15",
        "25"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-4",
      "difficulty": "medium",
      "explanation": "Only even numbers are added (2+4=6). Numbers 1,3,5 are skipped as they give remainder 1 when divided by 2"
    },
    {
      "question": "What will this pseudocode return?\nFUNCTION mystery(n)\n  IF n ≤ 1 THEN\n    RETURN 1\n  ELSE\n    RETURN n * mystery(n-1)\n  ENDIF\nENDFUNCTION\nmystery(4)",
      "options": [
        "4",
        "8",
        "16",
        "24"
      ],
      "correctOptions": [3],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-4",
      "difficulty": "hard",
      "explanation": "This is a factorial function. For n=4: 4 * 3 * 2 * 1 = 24"
    },
    {
      "question": "What is the time complexity of this pseudocode?\nFOR i = 1 TO n\n  FOR j = 1 TO i\n    PRINT i,j\n  ENDFOR\nENDFOR",
      "options": [
        "O(n)",
        "O(n log n)",
        "O(n²)",
        "O(2n)"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-4",
      "difficulty": "medium",
      "explanation": "Inner loop runs i times for each i from 1 to n. Total operations: 1+2+3+...+n = n(n+1)/2 which is O(n²)"
    },
    {
      "question": "What will be stored in array A after this pseudocode executes?\nA = [5,2,8,1,9]\nFOR i = 1 TO 4\n  FOR j = 1 TO 5-i\n    IF A[j] > A[j+1] THEN\n      SWAP A[j], A[j+1]\n    ENDIF\n  ENDFOR\nENDFOR",
      "options": [
        "[9,8,5,2,1]",
        "[1,2,5,8,9]",
        "[5,2,8,1,9]",
        "[1,9,2,8,5]"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-4",
      "difficulty": "hard",
      "explanation": "This is bubble sort algorithm. It repeatedly steps through the list, compares adjacent elements and swaps them if they are in wrong order."
    },
    {
      "question": "If a train travels 360 kilometers in 4 hours working 6 hours per day, how many days will it take 6 workers to complete the same job working 8 hours per day?",
      "options": [
        "10 days",
        "12 days",
        "16 days",
        "18 days"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-5",
      "difficulty": "hard",
      "explanation": "Using (M₁ × D₁ × H₁) = (M₂ × D₂ × H₂)\n8 × 12 × 6 = 6 × D × 8\n576 = 48D\nD = 10 days"
    },
    {
      "question": "Choose the sentence with correct parallel structure:",
      "options": [
        "He likes swimming, running, and to play tennis",
        "He likes swimming, running, and playing tennis",
        "He likes to swim, running, and tennis playing",
        "He likes to swim, to run, and plays tennis"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-6",
      "difficulty": "medium",
      "explanation": "Parallel structure requires consistent grammatical form. All gerunds: 'swimming, running, and playing' maintain parallelism."
    },
    {
      "question": "Which sentence demonstrates correct subject-verb agreement?",
      "options": [
        "Neither of the students have completed their assignments",
        "Neither of the students has completed their assignment",
        "Neither of the student has completed their assignments",
        "Neither of the students have completed his assignment"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-6",
      "difficulty": "medium",
      "explanation": "'Neither' is singular and requires a singular verb 'has'. The plural 'their' is acceptable as a gender-neutral pronoun."
    },
    {
      "question": "Identify the sentence with the correct use of the past perfect tense:",
      "options": [
        "By the time he reached home, she left",
        "By the time he reached home, she had left",
        "By the time he had reached home, she left",
        "By the time he has reached home, she had left"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-6",
      "difficulty": "medium",
      "explanation": "Past perfect (had + past participle) is used for an action completed before another past action. 'She had left' happened before 'he reached'."
    },
    {
      "question": "Which sentence uses the correct form of the conditional?",
      "options": [
        "If I would have known, I would have told you",
        "If I had known, I would have told you",
        "If I would know, I would tell you",
        "If I had known, I would told you"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-6",
      "difficulty": "hard",
      "explanation": "Third conditional uses 'if + past perfect' in the if-clause and 'would have + past participle' in the main clause."
    },
    {
      "question": "Select the sentence with correct modifier placement:",
      "options": [
        "Walking down the street, a tree caught my attention",
        "Walking down the street, I saw a tree that caught my attention",
        "A tree caught my attention while walking down the street",
        "Down the street walking, my attention was caught by a tree"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-6",
      "difficulty": "medium",
      "explanation": "The introductory modifier 'Walking down the street' should describe the subject 'I' of the main clause to avoid a dangling modifier."
    },
    {
      "question": "What is the output of this pseudocode?\nX = 5\nY = 3\nWHILE X > 0\n  Y = Y + X\n  X = X - 1\nPRINT Y",
      "options": [
        "18",
        "15",
        "20",
        "25"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 2,
      "difficulty": "medium",
      "explanation": "Loop runs 5 times. Y accumulates: 3+5+4+3+2+1 = 18"
    },
    {
      "question": "What is the time complexity of this pseudocode?\nFOR i = 1 TO n\n  FOR j = i TO n\n    PRINT i,j\n  ENDFOR\nENDFOR",
      "options": [
        "O(n)",
        "O(n log n)",
        "O(n²)",
        "O(2ⁿ)"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 2,
      "difficulty": "hard",
      "explanation": "First iteration: n steps, Second: n-1 steps, etc. Sum = n(n+1)/2 which is O(n²)"
    },
    {
      "question": "What will this recursive function return for input 4?\nFUNCTION F(n)\n  IF n ≤ 1 THEN\n    RETURN 1\n  ELSE\n    RETURN n + F(n-1)\n  ENDIF\nENDFUNCTION",
      "options": [
        "24",
        "10",
        "16",
        "4"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 2,
      "difficulty": "medium",
      "explanation": "F(4) = 4 + F(3) = 4 + 3 + F(2) = 4 + 3 + 2 + F(1) = 4 + 3 + 2 + 1 = 10"
    },
    {
      "question": "What will be stored in array A after this code executes?\nA = [5,2,8,1]\nFOR i = 0 TO 2\n  IF A[i] > A[i+1] THEN\n    SWAP A[i], A[i+1]\n  ENDIF\nENDFOR",
      "options": [
        "[2,5,1,8]",
        "[2,1,5,8]",
        "[1,2,5,8]",
        "[5,2,1,8]"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 2,
      "difficulty": "medium",
      "explanation": "One pass of bubble sort: 5,2,8,1 → 2,5,8,1 → 2,5,8,1 → 2,5,1,8"
    },
    {
      "question": "What is the output of this code?\nX = 10\nCOUNT = 0\nWHILE X > 0\n  IF X MOD 2 = 0 THEN\n    COUNT = COUNT + 1\n  ENDIF\n  X = X DIV 2\nENDWHILE\nPRINT COUNT",
      "options": [
        "2",
        "3",
        "4",
        "5"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 2,
      "difficulty": "medium",
      "explanation": "10→5→2→1: Counts even numbers (10,2). Answer is 2"
    },
    {
      "question": "What will this function return for input array [1,2,3,4,5]?\nFUNCTION Mystery(arr)\n  IF LENGTH(arr) ≤ 1 THEN\n    RETURN arr[0]\n  ENDIF\n  mid = LENGTH(arr) DIV 2\n  RETURN Mystery(arr[mid:]) + Mystery(arr[:mid])\nENDFUNCTION",
      "options": [
        "15",
        "5",
        "9",
        "12"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 3,
      "difficulty": "hard",
      "explanation": "Recursively splits array and sums all elements: 1+2+3+4+5=15"
    },
    {
      "question": "What is the output?\nA = 1\nB = 1\nFOR i = 1 TO 4\n  C = A + B\n  A = B\n  B = C\nENDFOR\nPRINT C",
      "options": [
        "5",
        "8",
        "3",
        "13"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 2,
      "difficulty": "medium",
      "explanation": "Generates Fibonacci sequence: 1,1,2,3,5,8. After 4 iterations, C=8"
    },
    {
      "question": "What is the space complexity of this recursive function?\nFUNCTION F(n)\n  IF n ≤ 1 THEN RETURN 1\n  RETURN F(n-1) + F(n-1)\nENDFUNCTION",
      "options": [
        "O(n)",
        "O(log n)",
        "O(2ⁿ)",
        "O(n²)"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 3,
      "difficulty": "hard",
      "explanation": "Each call spawns 2 more calls, creating a binary tree of depth n, resulting in O(2ⁿ) space"
    },
    {
      "question": "What will be the value of X after this code executes?\nX = 25\nWHILE X > 1\n  IF X MOD 2 = 0 THEN\n    X = X DIV 2\n  ELSE\n    X = 3 * X + 1\n  ENDIF\nENDWHILE",
      "options": [
        "1",
        "4",
        "2",
        "0"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 2,
      "difficulty": "medium",
      "explanation": "Collatz sequence: 25→76→38→19→58→29→88→44→22→11→34→17→52→26→13→40→20→10→5→16→8→4→2→1"
    },
    {
      "question": "What is the output of this code?\nFUNCTION GCD(a, b)\n  IF b = 0 THEN RETURN a\n  RETURN GCD(b, a MOD b)\nENDFUNCTION\nPRINT GCD(48, 18)",
      "options": [
        "6",
        "2",
        "3",
        "9"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 2,
      "difficulty": "medium",
      "explanation": "Euclidean algorithm: GCD(48,18)→GCD(18,12)→GCD(12,6)→GCD(6,0)→6"
    },
    {
      "question": "What is the correct order of logical operator precedence in most programming languages?",
      "options": [
        "NOT, AND, OR",
        "AND, OR, NOT",
        "OR, AND, NOT",
        "AND, NOT, OR"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 2,
      "section": "Sec-4",
      "difficulty": "medium",
      "explanation": "The order of precedence is: NOT (highest), AND, OR (lowest). This is similar to arithmetic where NOT is like negation, AND is like multiplication, and OR is like addition."
    },
    {
      "question": "What is the output of the following pseudocode?\n\n```\nBEGIN\n  SET count TO 0\n  WHILE count < 3\n    PRINT count\n    SET count TO count + 1\n  END_WHILE\nEND\n```",
      "options": [
        "0 1 2",
        "1 2 3",
        "0 1 2 3",
        "Error"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "The loop runs while count is less than 3, printing 0, 1, and 2."
    },
    {
      "question": "What is the purpose of a 'FOR' loop in pseudocode?",
      "options": [
        "To execute a block of code only once.",
        "To execute a block of code multiple times with a counter.",
        "To make a decision based on a condition.",
        "To define a function."
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'FOR' loops are used to iterate a block of code a specific number of times using a counter."
    },
    {
      "question": "In pseudocode, how do you denote the start of a function named 'Calculate'?",
      "options": [
        "FUNCTION Calculate()",
        "BEGIN Calculate",
        "START Function Calculate",
        "DEFINE Calculate()"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "The correct syntax is 'FUNCTION Calculate()' to denote the start of a function."
    },
   
    {
      "question": "In pseudocode, which keyword is used to define a function?",
      "options": [
        "FUNCTION",
        "DEFINE",
        "PROCEDURE",
        "METHOD"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'FUNCTION' is commonly used to define a function in pseudocode."
    },
    {
      "question": "What is the output of the following pseudocode?\n\n```\nBEGIN\n  SET x TO 2\n  FOR i FROM 1 TO 3\n    SET x TO x * 2\n  END_FOR\n  PRINT x\nEND\n```",
      "options": [
        "4",
        "6",
        "8",
        "10"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "x is doubled three times: 2→4→8↨, so output is 8."
    },
    {
      "question": "Which pseudocode construct is used to handle multiple execution paths based on different conditions?",
      "options": [
        "IF...THEN...ELSE",
        "FOR...END_FOR",
        "WHILE...DO",
        "REPEAT...UNTIL"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'IF...THEN...ELSE' allows handling multiple conditions and paths."
    },
    {
      "question": "What is the role of the 'END_IF' keyword in pseudocode?",
      "options": [
        "Starts an if condition",
        "Ends an if condition",
        "Begins a loop",
        "Ends a loop"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'END_IF' signifies the end of an IF block."
    },
    {
      "question": "How do you initialize a variable 'counter' to 10 in pseudocode?",
      "options": [
        "SET counter TO 10",
        "INITIALIZE counter TO 10",
        "DECLARE counter = 10",
        "ALL OF THE ABOVE"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'SET counter TO 10' is a common way to initialize variables in pseudocode."
    },
    {
      "question": "What is the purpose of the 'PRINT' statement in pseudocode?",
      "options": [
        "To take input from the user",
        "To output data to the screen",
        "To perform calculations",
        "To start a loop"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'PRINT' is used to display output to the screen."
    },
    {
      "question": "What does the following pseudocode print?\n\n```\nBEGIN\n  SET count TO 1\n  WHILE count <= 5\n    IF count MOD 2 == 0 THEN\n      PRINT count\n    END_IF\n    SET count TO count + 1\n  END_WHILE\nEND\n```",
      "options": [
        "Prints all numbers from 1 to 5",
        "Prints even numbers between 1 and 5",
        "Prints odd numbers between 1 and 5",
        "Prints nothing"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "The pseudocode prints numbers where count is even: 2 and 4."
    },
    {
      "question": "In pseudocode, how is a subroutine typically invoked?",
      "options": [
        "CALL SubroutineName",
        "START SubroutineName",
        "FUNCTION SubroutineName",
        "BEGIN SubroutineName"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'CALL SubroutineName' is used to invoke a subroutine."
    },
    {
      "question": "What is the purpose of the 'RETURN' statement in a pseudocode function?",
      "options": [
        "To end the program",
        "To exit a loop",
        "To send a value back to the calling code",
        "To start a new function"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'RETURN' sends a value back to where the function was called."
    },
    {
      "question": "What is the output of the following pseudocode?\n\n```\nBEGIN\n  SET a TO 1\n  SET b TO 2\n  SET c TO 3\n  PRINT a + b * c\nEND\n```",
      "options": [
        "9",
        "7",
        "5",
        "11"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "hard",
      "explanation": "According to order of operations, b * c = 6; then a + 6 = 7"
    },
    {
      "question": "Which keyword is used to define the end of a function in pseudocode?",
      "options": [
        "END_FUNCTION",
        "FINISH_FUNCTION",
        "END",
        "DONE"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "'END_FUNCTION' denotes the end of a function block."
    },
    {
      "question": "What does the following pseudocode do?\n\n```\nBEGIN\n  SET total TO 0\n  FOR i FROM 1 TO 3\n    SET total TO total + i\n  END_FOR\n  PRINT total\nEND\n```",
      "options": [
        "Calculates the sum of 1, 2, and 3",
        "Calculates the product of 1, 2, and 3",
        "Prints the values 1, 2, and 3",
        "Prints an error"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "easy",
      "explanation": "It sums the numbers 1, 2, and 3 to get 6."
    },
    {
      "question": "In pseudocode, which construct is used to handle multiple conditions?",
      "options": [
        "IF...ELSE IF...ELSE",
        "FOR...END_FOR",
        "WHILE...DO",
        "REPEAT...UNTIL"
      ],
      "correctOptions": [0],
      "answerType": "single",
      "marks": 1,
      "section": "Sec-3",
      "difficulty": "medium",
      "explanation": "'IF...ELSE IF...ELSE' allows handling multiple conditions."
    }
  ],
  "codingChallenges": [
    {
      "title": "Array Leaders",
      "description": "Find leaders in array",
      "problemStatement": "Write a program to find all elements which are greater than all elements to their right side in the array.",
      "constraints": "1 <= array size <= 100\n-10^3 <= elements <= 10^3",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "[16,17,4,3,5,2]",
          "output": "[17,5,2]",
          "isVisible": true
        },
        {
          "input": "[1,2,3,4,0]",
          "output": "[4,0]",
          "isVisible": true
        },
        {
          "input": "[7,4,5,7,3]",
          "output": "[7,7,3]",
          "isVisible": true
        },
        {
          "input": "[10,22,12,3,0,6]",
          "output": "[22,12,6]",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["arrays", "leaders"]
    },
    {
      "title": "Toggle Case",
      "description": "Toggle character case using bitwise",
      "problemStatement": "Write a program to toggle the case of each character in a string using bitwise operations.",
      "constraints": "1 <= string length <= 100\nString contains only letters",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "Hello World",
          "output": "hELLO wORLD",
          "isVisible": true
        },
        {
          "input": "Python",
          "output": "pYTHON",
          "isVisible": true
        },
        {
          "input": "JavaScript",
          "output": "jAVASCRIPT",
          "isVisible": true
        },
        {
          "input": "C++",
          "output": "c++",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["strings", "bitwise"]
    },
    {
      "title": "Count Zeros and Ones",
      "description": "Count binary digits",
      "problemStatement": "Write a program to count the number of 0s and 1s in the binary representation of a number.",
      "constraints": "0 <= number <= 10^9",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "14",
          "output": "Zeros: 1, Ones: 3",
          "isVisible": true
        },
        {
          "input": "8",
          "output": "Zeros: 3, Ones: 1",
          "isVisible": true
        },
        {
          "input": "15",
          "output": "Zeros: 0, Ones: 4",
          "isVisible": true
        },
        {
          "input": "16",
          "output": "Zeros: 4, Ones: 1",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["bitwise", "counting"]
    },
    {
      "title": "Fibonacci Pattern",
      "description": "Print Fibonacci pattern triangle",
      "problemStatement": "Write a program to print a triangle pattern where each row contains Fibonacci numbers up to that row number.",
      "constraints": "1 <= n <= 10",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "3",
          "output": "1\n1\n2",
          "isVisible": true
        },
        {
          "input": "5",
          "output": "1\n1\n2\n3\n5",
          "isVisible": true
        },
        {
          "input": "1",
          "output": "1",
          "isVisible": true
        },
        {
          "input": "10",
          "output": "1\n1\n2\n3\n5\n8\n13\n21\n34\n55",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["patterns", "fibonacci"]
    },
    {
      "title": "Count Pairs",
      "description": "Count pairs with given sum",
      "problemStatement": "Write a program to count pairs in an array with a given sum. For example, if array is [1,5,7,1] and sum is 6, output should be 2 (pairs: 1,5 and 5,1).",
      "constraints": "1 <= array size <= 100\n-1000 <= elements <= 1000",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "[1,5,7,1] 6",
          "output": "2",
          "isVisible": true
        },
        {
          "input": "[1,1,1,1] 2",
          "output": "6",
          "isVisible": true
        },
        {
          "input": "[2,4,6,8,10] 12",
          "output": "2",
          "isVisible": true
        },
        {
          "input": "[3,3,3] 6",
          "output": "3",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["arrays", "loops"]
    },
    {
      "title": "Basic Calculator",
      "description": "Implement a basic calculator that performs arithmetic operations",
      "problemStatement": "Write a function that takes two numbers and an operator (+, -, *, /) as input and returns the result of the operation. Return 'Error' for division by zero.",
      "constraints": "1. -10^5 <= numbers <= 10^5\n2. operator can be '+', '-', '*', or '/'",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "function calculate(num1, operator, num2) {\n    // Write your code here\n    // Return the result of the arithmetic operation\n    \n}",
          "invisibleCode": "module.exports = calculate;"
        },
        "python": {
          "visibleCode": "def calculate(num1, operator, num2):\n    # Write your code here\n    # Return the result of the arithmetic operation\n    pass",
          "invisibleCode": "# No additional code needed"
        },
        "java": {
          "visibleCode": "public class Solution {\n    public static double calculate(double num1, String operator, double num2) {\n        // Write your code here\n        // Return the result of the arithmetic operation\n    }\n}",
          "invisibleCode": "// No additional code needed"
        },
        "c": {
          "visibleCode": "double calculate(double num1, char operator, double num2) {\n    // Write your code here\n    // Return the result of the arithmetic operation\n}",
          "invisibleCode": "#include <stdio.h>\n#include <stdlib.h>"
        },
        "cpp": {
          "visibleCode": "double calculate(double num1, char operator, double num2) {\n    // Write your code here\n    // Return the result of the arithmetic operation\n}",
          "invisibleCode": "#include <iostream>\nusing namespace std;"
        }
      },
      "testCases": [
        {
          "input": "10 + 5",
          "output": "15",
          "isVisible": true
        },
        {
          "input": "20 - 8",
          "output": "12",
          "isVisible": true
        },
        {
          "input": "6 * 4",
          "output": "24",
          "isVisible": true
        },
        {
          "input": "15 / 3",
          "output": "5",
          "isVisible": true
        },
        {
          "input": "10 / 0",
          "output": "Error",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["arithmetic", "basic-math"]
    },
    {
      "title": "Even or Odd",
      "description": "Determine if a number is even or odd",
      "problemStatement": "Write a program that takes an integer as input and prints 'Even' if the number is even and 'Odd' if the number is odd.",
      "constraints": "1. -10^9 <= number <= 10^9",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "4",
          "output": "Even",
          "isVisible": true
        },
        {
          "input": "7",
          "output": "Odd",
          "isVisible": true
        },
        {
          "input": "0",
          "output": "Even",
          "isVisible": true
        },
        {
          "input": "-9",
          "output": "Odd",
          "isVisible": true
        }
      ],
      "marks": 5,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "easy",
      "tags": ["if-else", "basic"]
    },
    {
      "title": "Grade Calculator",
      "description": "Calculate grades based on marks",
      "problemStatement": "Write a program that takes marks (0-100) as input and outputs the grade: 'A' for ≥90, 'B' for ≥80, 'C' for ≥70, 'D' for ≥60, 'F' for <60.",
      "constraints": "0 <= marks <= 100",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "95",
          "output": "A",
          "isVisible": true
        },
        {
          "input": "82",
          "output": "B",
          "isVisible": true
        },
        {
          "input": "75",
          "output": "C",
          "isVisible": true
        },
        {
          "input": "65",
          "output": "D",
          "isVisible": true
        },
        {
          "input": "45",
          "output": "F",
          "isVisible": true
        }
      ],
      "marks": 5,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "easy",
      "tags": ["if-else", "basic"]
    },
    {
      "title": "Count Set Bits",
      "description": "Count the number of 1s in binary representation",
      "problemStatement": "Write a program that takes an integer as input and returns the count of 1s in its binary representation.",
      "constraints": "0 <= number <= 10^9",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "7",
          "output": "3",
          "isVisible": true
        },
        {
          "input": "4",
          "output": "1",
          "isVisible": true
        },
        {
          "input": "15",
          "output": "4",
          "isVisible": true
        },
        {
          "input": "0",
          "output": "0",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["bitwise", "binary"]
    },
    {
      "title": "Power of Two",
      "description": "Check if a number is a power of 2",
      "problemStatement": "Write a program that takes an integer as input and returns 'Yes' if it's a power of 2, and 'No' otherwise. Use bitwise operations.",
      "constraints": "0 <= number <= 10^9",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "8",
          "output": "Yes",
          "isVisible": true
        },
        {
          "input": "6",
          "output": "No",
          "isVisible": true
        },
        {
          "input": "1",
          "output": "Yes",
          "isVisible": true
        },
        {
          "input": "0",
          "output": "No",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["bitwise", "math"]
    },
    {
      "title": "Sum of Digits",
      "description": "Calculate sum of digits in a number",
      "problemStatement": "Write a program that takes a number as input and returns the sum of its digits.",
      "constraints": "0 <= number <= 10^9",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "123",
          "output": "6",
          "isVisible": true
        },
        {
          "input": "9999",
          "output": "36",
          "isVisible": true
        },
        {
          "input": "0",
          "output": "0",
          "isVisible": true
        },
        {
          "input": "10",
          "output": "1",
          "isVisible": true
        }
      ],
      "marks": 5,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "easy",
      "tags": ["arithmetic", "basic-math"]
    },
    {
      "title": "Factorial Calculator",
      "description": "Calculate factorial of a number",
      "problemStatement": "Write a program that takes a non-negative integer as input and returns its factorial.",
      "constraints": "0 <= number <= 20",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "5",
          "output": "120",
          "isVisible": true
        },
        {
          "input": "0",
          "output": "1",
          "isVisible": true
        },
        {
          "input": "3",
          "output": "6",
          "isVisible": true
        },
        {
          "input": "7",
          "output": "5040",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["arithmetic", "loops"]
    },
    {
      "title": "List Reversal",
      "description": "Reverse elements in a list",
      "problemStatement": "Write a program that takes a list of numbers as input and returns the list in reverse order.",
      "constraints": "1 <= list size <= 100\n-1000 <= elements <= 1000",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "[1, 2, 3, 4]",
          "output": "[4, 3, 2, 1]",
          "isVisible": true
        },
        {
          "input": "[0]",
          "output": "[0]",
          "isVisible": true
        },
        {
          "input": "[-1, 5, -6, 9]",
          "output": "[9, -6, 5, -1]",
          "isVisible": true
        },
        {
          "input": "[10, 20]",
          "output": "[20, 10]",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["lists", "loops"]
    },
    {
      "title": "Binary Addition",
      "description": "Add numbers using bitwise",
      "problemStatement": "Write a program to add two numbers using only bitwise operators (no + operator allowed).",
      "constraints": "0 <= numbers <= 10^9",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "5 3",
          "output": "8",
          "isVisible": true
        },
        {
          "input": "10 12",
          "output": "22",
          "isVisible": true
        },
        {
          "input": "15 15",
          "output": "30",
          "isVisible": true
        },
        {
          "input": "0 7",
          "output": "7",
          "isVisible": true
        }
      ],
      "marks": 15,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "hard",
      "tags": ["bitwise", "arithmetic"]
    },
    {
      "title": "Number Pattern Pyramid",
      "description": "Print number pyramid pattern",
      "problemStatement": "Write a program to print a pyramid pattern where each row contains the row number repeated with proper spacing.",
      "constraints": "1 <= n <= 9",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "4",
          "output": "   1\n  2 2\n 3 3 3\n4 4 4 4",
          "isVisible": true
        },
        {
          "input": "3",
          "output": "  1\n 2 2\n3 3 3",
          "isVisible": true
        },
        {
          "input": "2",
          "output": " 1\n2 2",
          "isVisible": true
        },
        {
          "input": "1",
          "output": "1",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "section": "Sec-3",
      "tags": ["nested-loops", "patterns"]
    },
    {
      "title": "Array Wave Form",
      "description": "Arrange array in wave form",
      "problemStatement": "Write a program to arrange array elements in a wave form (a1 >= a2 <= a3 >= a4 <= a5). For example: [1,2,3,4] becomes [2,1,4,3].",
      "constraints": "1 <= array size <= 100\n-1000 <= elements <= 1000",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "[1,2,3,4]",
          "output": "[2,1,4,3]",
          "isVisible": true
        },
        {
          "input": "[1,5,2,6,3]",
          "output": "[5,1,6,2,3]",
          "isVisible": true
        },
        {
          "input": "[1,1,1,1]",
          "output": "[1,1,1,1]",
          "isVisible": true
        },
        {
          "input": "[5,4,3,2,1]",
          "output": "[5,3,4,1,2]",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["arrays", "sorting"]
    },
    {
      "title": "Floyd's Triangle",
      "description": "Print Floyd's triangle pattern",
      "problemStatement": "Write a program to print Floyd's triangle pattern with n rows. Numbers start from 1 and increment by 1 in each position.",
      "constraints": "1 <= n <= 10",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "4",
          "output": "1\n2 3\n4 5 6\n7 8 9 10",
          "isVisible": true
        },
        {
          "input": "3",
          "output": "1\n2 3\n4 5 6",
          "isVisible": true
        },
        {
          "input": "2",
          "output": "1\n2 3",
          "isVisible": true
        },
        {
          "input": "5",
          "output": "1\n2 3\n4 5 6\n7 8 9 10\n11 12 13 14 15",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["nested-loops", "patterns"]
    },
    {
      "title": "Array Rearrange",
      "description": "Rearrange array elements",
      "problemStatement": "Write a program to rearrange array elements so that arr[i] becomes arr[arr[i]]. For example: [1,0,2,3] becomes [0,1,2,3].",
      "constraints": "0 <= arr[i] < n (array size)",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "[1,0,2,3]",
          "output": "[0,1,2,3]",
          "isVisible": true
        },
        {
          "input": "[2,0,1,4,3]",
          "output": "[1,2,0,3,4]",
          "isVisible": true
        },
        {
          "input": "[0,1,2]",
          "output": "[0,1,2]",
          "isVisible": true
        },
        {
          "input": "[3,2,1,0]",
          "output": "[0,1,2,3]",
          "isVisible": true
        }
      ],
      "marks": 15,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "hard",
      "tags": ["arrays", "rearrangement"]
    },
    {
      "title": "Temperature Converter",
      "description": "Convert between temperature scales",
      "problemStatement": "Write a program that converts temperature between Celsius and Fahrenheit. If input starts with 'C', convert from Celsius to Fahrenheit. If input starts with 'F', convert from Fahrenheit to Celsius. Format: 'C 23' or 'F 73'",
      "constraints": "-100 <= temperature <= 100",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "C 0",
          "output": "32.0",
          "isVisible": true
        },
        {
          "input": "F 32",
          "output": "0.0",
          "isVisible": true
        },
        {
          "input": "C 100",
          "output": "212.0",
          "isVisible": true
        }
      ],
      "marks": 5,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "easy",
      "tags": ["if-else", "arithmetic"]
    },
    {
      "title": "Bit Position Swapper",
      "description": "Swap bits at given positions",
      "problemStatement": "Write a program that takes a number and two bit positions (p1, p2) as input. Swap the bits at these positions and return the new number.",
      "constraints": "0 <= number <= 1024\n0 <= p1,p2 <= 10",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "10 1 3",
          "output": "14",
          "isVisible": true
        },
        {
          "input": "7 0 2",
          "output": "3",
          "isVisible": true
        },
        {
          "input": "1024 0 10",
          "output": "1",
          "isVisible": true
        },
        {
          "input": "15 1 2",
          "output": "15",
          "isVisible": false
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["bitwise"]
    },
    {
      "title": "List Element Counter",
      "description": "Count occurrences with conditions",
      "problemStatement": "Write a program that counts how many elements in a list are greater than their right neighbor. Last element should be counted if it's greater than the first element (circular comparison).",
      "constraints": "2 <= list size <= 100\n-1000 <= elements <= 1000",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "[5,2,3,7,1]",
          "output": "2",
          "isVisible": true
        },
        {
          "input": "[1,2,3,4]",
          "output": "0",
          "isVisible": true
        },
        {
          "input": "[9,9,9,9]",
          "output": "0",
          "isVisible": true
        },
        {
          "input": "[3,1,4,1,5,9,2,6]",
          "output": "4",
          "isVisible": false
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["lists", "loops"]
    },
    {
      "title": "Multiplication Table Generator",
      "description": "Generate custom multiplication table",
      "problemStatement": "Write a program that generates a multiplication table for a given number up to n rows. Format each number to have the same width.",
      "constraints": "1 <= number <= 20\n1 <= n <= 10",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "5 3",
          "output": "5 x 1 = 5\n5 x 2 = 10\n5 x 3 = 15",
          "isVisible": true
        },
        {
          "input": "2 4",
          "output": "2 x 1 = 2\n2 x 2 = 4\n2 x 3 = 6\n2 x 4 = 8",
          "isVisible": true
        },
        {
          "input": "12 2",
          "output": "12 x 1 = 12\n12 x 2 = 24",
          "isVisible": true
        },
        {
          "input": "7 5",
          "output": "7 x 1 = 7\n7 x 2 = 14\n7 x 3 = 21\n7 x 4 = 28\n7 x 5 = 35",
          "isVisible": false
        }
      ],
      "marks": 5,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "easy",
      "tags": ["for-loop", "arithmetic"]
    },
    {
      "title": "Number Triangle",
      "description": "Print number triangle pattern",
      "problemStatement": "Write a program to print a triangle where each row contains numbers from 1 to row number, but only odd numbers.",
      "constraints": "1 <= n <= 9",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "4",
          "output": "1\n1 3\n1 3 5\n1 3 5 7",
          "isVisible": true
        },
        {
          "input": "3",
          "output": "1\n1 3\n1 3 5",
          "isVisible": true
        },
        {
          "input": "1",
          "output": "1",
          "isVisible": true
        },
        {
          "input": "5",
          "output": "1\n1 3\n1 3 5\n1 3 5 7\n1 3 5 7 9",
          "isVisible": false
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["nested-for-loop", "patterns"]
    },
    {
      "title": "Digit Manipulator",
      "description": "Manipulate digits using arithmetic",
      "problemStatement": "Write a program that takes a number and performs the following: multiply digits at odd positions by 2 and subtract 1 from digits at even positions. Return the new number.",
      "constraints": "10 <= number <= 10^6",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "1234",
          "output": "2163",
          "isVisible": true
        },
        {
          "input": "5678",
          "output": "10557",
          "isVisible": true
        },
        {
          "input": "1111",
          "output": "2121",
          "isVisible": true
        },
        {
          "input": "9999",
          "output": "18989",
          "isVisible": true
        },
        {
          "input": "1000",
          "output": "2001",
          "isVisible": false
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["arithmetic", "loops"]
    },
    {
      "title": "List Compressor",
      "description": "Compress consecutive elements",
      "problemStatement": "Write a program that compresses a list by replacing consecutive repeated elements with a single element followed by the count. Return as a list of [element, count] pairs.",
      "constraints": "1 <= list size <= 100\n-1000 <= elements <= 1000",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "[1,1,1,2,2,3]",
          "output": "[[1,3],[2,2],[3,1]]",
          "isVisible": true
        },
        {
          "input": "[5,5,5,5]",
          "output": "[[5,4]]",
          "isVisible": true
        },
        {
          "input": "[1,2,3,4]",
          "output": "[[1,1],[2,1],[3,1],[4,1]]",
          "isVisible": true
        },
        {
          "input": "[1]",
          "output": "[[1,1]]",
          "isVisible": true
        },
        {
          "input": "[4,4,4,4,3,3,2,2,2]",
          "output": "[[4,4],[3,2],[2,3]]",
          "isVisible": false
        }
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["lists", "loops"]
    },
    {
      "title": "Bit Counter Range",
      "description": "Count bits in range",
      "problemStatement": "Write a program that counts the total number of set bits (1s) in all numbers from 1 to n using bitwise operations.",
      "constraints": "1 <= n <= 100",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "4",
          "output": "5",
          "isVisible": true
        },
        {
          "input": "7",
          "output": "12",
          "isVisible": true
        },
        {
          "input": "1",
          "output": "1",
          "isVisible": true
        },
        {
          "input": "16",
          "output": "20",
          "isVisible": true
        },
        {
          "input": "32",
          "output": "47",
          "isVisible": false
        }
      ],
      "marks": 15,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "hard",
      "tags": ["bitwise", "loops"]
    },
    {
      "title": "Grade Analyzer",
      "description": "Analyze student grades",
      "problemStatement": "Write a program that takes a list of grades and returns: 'Excellent' if all grades are above 90, 'Good' if average is above 80, 'Average' if average is above 70, else 'Need Improvement'.",
      "constraints": "1 <= list size <= 50\n0 <= grades <= 100",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "[95,92,91]",
          "output": "Excellent",
          "isVisible": true
        },
        {
          "input": "[85,82,78]",
          "output": "Good",
          "isVisible": true
        },
        {
          "input": "[75,72,78]",
          "output": "Average",
          "isVisible": true
        },
        {
          "input": "[65,62,68]",
          "output": "Need Improvement",
          "isVisible": true
        },
        {
          "input": "[90,89,91]",
          "output": "Good",
          "isVisible": false
        }
      ],
      "marks": 5,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "easy",
      "tags": ["if-else", "lists"]
    },
    {
      "title": "String Rotation Checker",
      "description": "Check if one string is rotation of another",
      "problemStatement": "Write a program that determines if string s2 is a rotation of string s1. For example, 'waterbottle' is a rotation of 'erbottlewat'.",
      "constraints": "1 <= string length <= 10^4\nStrings contain only lowercase letters",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "waterbottle erbottlewat",
          "output": "true",
          "isVisible": true
        },
        {
          "input": "hello world",
          "output": "false",
          "isVisible": true
        },
        {
          "input": "abcde eabcd",
          "output": "true",
          "isVisible": true
        }
      ],
      "marks": 10,
      "timeLimit": 1, 
      "memoryLimit": 256,
      "difficulty": "medium",
      "tags": ["strings", "pattern-matching"]
    },
    {
      "title": "Matrix Spiral Printer",
      "description": "Print matrix elements in spiral order",
      "problemStatement": "Write a program that prints the elements of an n x m matrix in spiral order (clockwise, starting from top-left corner).",
      "constraints": "1 <= n,m <= 10\n-100 <= matrix elements <= 100",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "[[1,2,3],[4,5,6],[7,8,9]]",
          "output": "[1,2,3,6,9,8,7,4,5]",
          "isVisible": true
        },
        {
          "input": "[[1,2],[3,4]]",
          "output": "[1,2,4,3]",
          "isVisible": true
        },
        {
          "input": "[[1]]",
          "output": "[1]",
          "isVisible": true
        }
      ],
      "marks": 15,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "hard",
      "tags": ["matrix", "arrays"]
    },
    {
      "title": "Balanced Parentheses Generator",
      "description": "Generate valid parentheses combinations",
      "problemStatement": "Write a program that generates all possible valid combinations of n pairs of parentheses. For example, for n=2, valid combinations are: '(())', '()()'.",
      "constraints": "1 <= n <= 8",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# Write your code here"
        },
        "java": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// Write your code here"
        }
      },
      "testCases": [
        {
          "input": "2",
          "output": "['(())', '()()']",
          "isVisible": true
        },
        {
          "input": "1",
          "output": "['()']",
          "isVisible": true
        },
        {
          "input": "3",
          "output": "['((()))', '(()())', '(())()', '()(())', '()()()']",
          "isVisible": true
        }
      ],
      "marks": 15,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "hard",
      "tags": ["recursion", "backtracking"]
    }
  ]
}
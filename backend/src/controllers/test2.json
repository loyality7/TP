{
    "title": "Aptitude and Programming Test 2",
    "description": "A comprehensive test for MITS students covering Quantitative Aptitude and Basic Programming skills.",
    "duration": 75,
    "proctoring": true,
    "type": "coding_challenge",
    "category": "Aptitude and Programming",
    "difficulty": "beginner",
    "instructions": "1. Complete all sections: Aptitude MCQs and Programming Questions\n2. Each coding solution must handle basic test cases\n3. Time management is crucial - attempt all questions\n4. Read each question carefully before answering",
    "mcqs": [
      {
        "question": "3 pumps, working 8 hours a day, can empty a tank in 2 days. How many hours a day must 4 pumps work to empty the tank in 1 day?",
        "options": [
          "9",
          "10",
          "11",
          "12"
        ],
        "correctOptions": [3],
        "answerType": "single",
        "marks": 4,
        "difficulty": "medium",
        "explanation": "Let the required number of working hours per day be x. More pumps, Less working hours per day (Indirect Proportion). Less days, More working hours per day (Indirect Proportion). Using proportion: 4 × 1 × x = 3 × 2 × 8, solving for x = 12"
      },
      {
        "question": "If the cost of x metres of wire is d rupees, then what is the cost of y metres of wire at the same rate?",
        "options": [
          "Rs. xy/d",
          "Rs. (xd)",
          "Rs. (yd)",
          "Rs. yd/x"
        ],
        "correctOptions": [3],
        "answerType": "single",
        "marks": 4,
        "difficulty": "medium",
        "explanation": "Cost of x metres = Rs. d. Cost of 1 metre = Rs. d/x. Cost of y metres = Rs. (d/x) × y = Rs. yd/x"
      }
    ],
    "codingChallenges": [
      {
        "title": "String Reversal",
        "description": "Write a program to reverse a given string",
        "problemStatement": "Create a function that takes a string as input and returns the reversed string.",
        "constraints": "1 <= string length <= 100",
        "allowedLanguages": ["javascript", "python", "java"],
        "timeLimit": 1,
        "memoryLimit": 256,
        "languageImplementations": {
          "javascript": {
            "visibleCode": "// String Reversal Solution\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nfunction reverseString(str) {\n    let reversed = '';\n    for(let i = str.length - 1; i >= 0; i--) {\n        reversed += str[i];\n    }\n    return reversed;\n}\n\nrl.question('Enter a string to reverse: ', (input) => {\n    console.log('Reversed string:', reverseString(input));\n    rl.close();\n});",
            "invisibleCode": "// no code needed"
          },
          "python": {
            "visibleCode": "# String Reversal Solution\ndef reverse_string(str):\n    reversed_str = ''\n    for char in str:\n        reversed_str = char + reversed_str\n    return reversed_str\n\n# Taking input from user\ndef main():\n    input_str = input('Enter a string to reverse: ')\n    result = reverse_string(input_str)\n    print(f'Reversed string: {result}')\n\nif __name__ == '__main__':\n    main()",
            "invisibleCode": "# no code needed"
          },
          "java": {
            "visibleCode": "import java.util.Scanner;\n\npublic class StringReversal {\n    public String reverseString(String str) {\n        char[] charArray = str.toCharArray();\n        int left = 0, right = str.length() - 1;\n        \n        while (left < right) {\n            char temp = charArray[left];\n            charArray[left] = charArray[right];\n            charArray[right] = temp;\n            left++;\n            right--;\n        }\n        return new String(charArray);\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        StringReversal solution = new StringReversal();\n\n        System.out.print(\"Enter a string to reverse: \");\n        String input = scanner.nextLine();\n        \n        String result = solution.reverseString(input);\n        System.out.println(\"Reversed string: \" + result);\n        \n        scanner.close();\n    }\n}",
            "invisibleCode": "// no code needed"
          }
        },
        "testCases": [
          {"input": "hello", "output": "olleh", "isVisible": true},
          {"input": "world", "output": "dlrow", "isVisible": true}
        ],
        "marks": 10,
        "difficulty": "easy",
        "tags": ["strings", "basic"]
      },
      {
        "title": "Grade Calculator",
        "description": "Calculate grade based on marks",
        "problemStatement": "Write a program that takes marks (0-100) as input and returns the grade: A(90-100), B(80-89), C(70-79), D(60-69), F(0-59)",
        "constraints": "0 <= marks <= 100",
        "allowedLanguages": ["javascript", "python", "java"],
        "timeLimit": 1,
        "memoryLimit": 256,
        "languageImplementations": {
          "javascript": {
            "visibleCode": "const readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nfunction calculateGrade(marks) {\n    if (marks >= 90) return 'A';\n    if (marks >= 80) return 'B';\n    if (marks >= 70) return 'C';\n    if (marks >= 60) return 'D';\n    return 'F';\n}\n\nrl.question('Enter marks (0-100): ', (input) => {\n    const marks = parseInt(input);\n    if (isNaN(marks) || marks < 0 || marks > 100) {\n        console.log('Please enter a valid number between 0 and 100');\n    } else {\n        console.log('Grade:', calculateGrade(marks));\n    }\n    rl.close();\n});",
            "invisibleCode": "// no code needed"
          },
          "python": {
            "visibleCode": "def calculate_grade(marks):\n    grades = [\n        (90, 'A'), (80, 'B'), (70, 'C'),\n        (60, 'D'), (0, 'F')\n    ]\n    for min_mark, grade in grades:\n        if marks >= min_mark:\n            return grade\n\ndef main():\n    try:\n        marks = float(input('Enter marks (0-100): '))\n        if 0 <= marks <= 100:\n            grade = calculate_grade(marks)\n            print(f'Grade: {grade}')\n        else:\n            print('Please enter a number between 0 and 100')\n    except ValueError:\n        print('Please enter a valid number')\n\nif __name__ == '__main__':\n    main()",
            "invisibleCode": "# no code needed"
          },
          "java": {
            "visibleCode": "import java.util.Scanner;\n\npublic class GradeCalculator {\n    public String calculateGrade(int marks) {\n        int grade = marks / 10;\n        switch (grade) {\n            case 10:\n            case 9: return \"A\";\n            case 8: return \"B\";\n            case 7: return \"C\";\n            case 6: return \"D\";\n            default: return \"F\";\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        GradeCalculator calculator = new GradeCalculator();\n\n        System.out.print(\"Enter marks (0-100): \");\n        try {\n            int marks = scanner.nextInt();\n            if (marks >= 0 && marks <= 100) {\n                String grade = calculator.calculateGrade(marks);\n                System.out.println(\"Grade: \" + grade);\n            } else {\n                System.out.println(\"Please enter a number between 0 and 100\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Please enter a valid number\");\n        } finally {\n            scanner.close();\n        }\n    }\n}",
            "invisibleCode": "// no code needed"
          }
        },
        "testCases": [
          {"input": "95", "output": "A", "isVisible": true},
          {"input": "75", "output": "C", "isVisible": true}
        ],
        "marks": 10,
        "difficulty": "easy",
        "tags": ["if-else", "basic"]
      }
    ]
}
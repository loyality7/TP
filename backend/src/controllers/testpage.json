{
  "title": "Aptitude and Programming Test 3",
  "description": "A comprehensive test for MITS students covering Quantitative Aptitude and Basic Programming skills.",
  "duration": 90,
  "proctoring": true,
  "type": "coding_challenge",
  "category": "Aptitude and Programming",
  "difficulty": "beginner",
  "instructions": "1. Complete all sections: Aptitude MCQs and Programming Questions\n2. Each coding solution must handle basic test cases\n3. Time management is crucial - attempt all questions\n4. Read each question carefully before answering",
  "mcqs": [
    {
      "question": "3 pumps, working 8 hours a day, can empty a tank in 2 days. How many hours a day must 4 pumps work to empty the tank in 1 day?",
      "options": [
        "9",
        "10",
        "11",
        "12"
      ],
      "correctOptions": [3],
      "answerType": "single",
      "marks": 5,
      "difficulty": "medium",
      "explanation": "Let the required number of working hours per day be x. More pumps, Less working hours per day (Indirect Proportion). Less days, More working hours per day (Indirect Proportion). Using proportion: 4 × 1 × x = 3 × 2 × 8, solving for x = 12"
    },
    {
      "question": "If the cost of x metres of wire is d rupees, then what is the cost of y metres of wire at the same rate?",
      "options": [
        "Rs. xy/d",
        "Rs. (xd)",
        "Rs. (yd)",
        "Rs. yd/x"
      ],
      "correctOptions": [3],
      "answerType": "single",
      "marks": 5,
      "difficulty": "medium",
      "explanation": "Cost of x metres = Rs. d. Cost of 1 metre = Rs. d/x. Cost of y metres = Rs. (d/x) × y = Rs. yd/x"
    },
    {
      "question": "If the cost price of shoes doubles, then the loss gets tripled of what it was initially. The initial loss % was?",
      "options": [
        "42",
        "50",
        "52",
        "58"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 5,
      "difficulty": "medium",
      "explanation": "Let CP = 100 and Loss be X. SP = CP - X = 100 - X. When CP doubles and loss triples: SP = 200 - 3X. Solving: 100 - X = 200 - 3X gives X = 50, so initial loss was 50%"
    }
  ],
  "codingChallenges": [
    {
      "title": "String Reversal",
      "description": "Write a program to reverse a given string",
      "problemStatement": "Create a function that takes a string as input and returns the reversed string.",
      "constraints": "1 <= string length <= 100",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "function reverseString(str) {\n  return str.split('').reverse().join('');\n}",
          "invisibleCode": "// No code needed"
        },
        "python": {
          "visibleCode": "def reverse_string(s):\n    return s[::-1]",
          "invisibleCode": "# No code needed"
        },
        "java": {
          "visibleCode": "public String reverseString(String str) {\n    return new StringBuilder(str).reverse().toString();\n}",
          "invisibleCode": "// No code needed"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// No code needed"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// No code needed"
        }
      },
      "testCases": [
        {"input": "hello", "output": "olleh", "isVisible": true},
        {"input": "world", "output": "dlrow", "isVisible": true}
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "easy",
      "tags": ["strings", "basic"]
    },
    {
      "title": "Grade Calculator",
      "description": "Calculate grade based on marks",
      "problemStatement": "Write a program that takes marks (0-100) as input and returns the grade: A(90-100), B(80-89), C(70-79), D(60-69), F(0-59)",
      "constraints": "0 <= marks <= 100",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "function calculateGrade(marks) {\n  if (marks >= 90) return 'A';\n  else if (marks >= 80) return 'B';\n  else if (marks >= 70) return 'C';\n  else if (marks >= 60) return 'D';\n  else return 'F';\n}",
          "invisibleCode": "// No code needed"
        },
        "python": {
          "visibleCode": "def calculate_grade(marks):\n    if marks >= 90: return 'A'\n    elif marks >= 80: return 'B'\n    elif marks >= 70: return 'C'\n    elif marks >= 60: return 'D'\n    else: return 'F'",
          "invisibleCode": "# No code needed"
        },
        "java": {
          "visibleCode": "public String calculateGrade(int marks) {\n    if (marks >= 90) return \"A\";\n    else if (marks >= 80) return \"B\";\n    else if (marks >= 70) return \"C\";\n    else if (marks >= 60) return \"D\";\n    else return \"F\";\n}",
          "invisibleCode": "// No code needed"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// No code needed"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// No code needed"
        }
      },
      "testCases": [
        {"input": "95", "output": "A", "isVisible": true},
        {"input": "75", "output": "C", "isVisible": true}
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "easy",
      "tags": ["if-else", "basic"]
    },
    {
      "title": "Sum of Digits",
      "description": "Calculate sum of digits using while loop",
      "problemStatement": "Write a program that calculates the sum of digits of a given number using while loop. Example: 123 → 6 (1+2+3)",
      "constraints": "1 <= number <= 10^9",
      "allowedLanguages": ["javascript", "python", "java", "c", "cpp"],
      "languageImplementations": {
        "javascript": {
          "visibleCode": "function sumOfDigits(num) {\n  let sum = 0;\n  while (num > 0) {\n    sum += num % 10;\n    num = Math.floor(num / 10);\n  }\n  return sum;\n}",
          "invisibleCode": "// No code needed"
        },
        "python": {
          "visibleCode": "def sum_of_digits(num):\n    sum = 0\n    while num > 0:\n        sum += num % 10\n        num //= 10\n    return sum",
          "invisibleCode": "# No code needed"
        },
        "java": {
          "visibleCode": "public int sumOfDigits(int num) {\n    int sum = 0;\n    while (num > 0) {\n        sum += num % 10;\n        num /= 10;\n    }\n    return sum;\n}",
          "invisibleCode": "// No code needed"
        },
        "c": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// No code needed"
        },
        "cpp": {
          "visibleCode": "// Write your code here",
          "invisibleCode": "// No code needed"
        }
      },
      "testCases": [
        {"input": "123", "output": "6", "isVisible": true},
        {"input": "5678", "output": "26", "isVisible": true}
      ],
      "marks": 10,
      "timeLimit": 1,
      "memoryLimit": 256,
      "difficulty": "easy",
      "tags": ["while-loop", "basic"]
    }
  ]
}
{
  "title": "Python Basics Assessment",
  "description": "A comprehensive test covering Python fundamentals for beginners",
  "duration": 120,
  "proctoring": true,
  "type": "coding_challenge",
  "category": "Python Programming",
  "difficulty": "beginner",
  "instructions": "1. Complete all sections: Python MCQs and Programming Questions\n2. Each coding solution must handle the given test cases\n3. Time management is crucial - attempt all questions\n4. Read each question carefully before answering",
  "mcqs": [
    {
      "question": "What will be the output of print(type(5.0))?",
      "options": [
        "<class 'int'>",
        "<class 'float'>",
        "<class 'str'>",
        "<class 'number'>"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 2,
      "difficulty": "easy",
      "explanation": "In Python, 5.0 is a floating-point number, so type(5.0) returns <class 'float'>"
    },
    {
      "question": "Which of the following is the correct way to take integer input in Python?",
      "options": [
        "input()",
        "int(input())",
        "float(input())",
        "str(input())"
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 2,
      "difficulty": "easy",
      "explanation": "int(input()) converts the string input to an integer"
    },
    {
      "question": "What is the output of 'Hello'[1:4]?",
      "options": [
        "Hell",
        "ello",
        "ell",
        "Hello"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 2,
      "difficulty": "easy",
      "explanation": "String slicing [1:4] includes characters from index 1 to 3 (4-1)"
    },
    {
      "question": "Which method converts a string to title case?",
      "options": [
        "upper()",
        "lower()",
        "title()",
        "capitalize()"
      ],
      "correctOptions": [2],
      "answerType": "single",
      "marks": 2,
      "difficulty": "easy",
      "explanation": "The title() method converts the first character of each word to uppercase"
    },
    {
      "question": "What will print(f'{10:5d}') display?",
      "options": [
        "10",
        "   10",
        "00010",
        "10   "
      ],
      "correctOptions": [1],
      "answerType": "single",
      "marks": 2,
      "difficulty": "easy",
      "explanation": "f'{10:5d}' formats the number 10 with 5 spaces, right-aligned"
    }
  ],
  "codingChallenges": [
    {
      "title": "Variables and Input/Output",
      "description": "Basic input/output operations in Python",
      "problemStatement": "Write a program that takes two numbers as input and prints their sum, difference, product, and quotient. Format the output as:\nSum: x\nDifference: y\nProduct: z\nQuotient: w",
      "constraints": "1 <= numbers <= 1000\nSecond number should not be zero",
      "allowedLanguages": ["python"],
      "languageImplementations": {
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# No additional code needed"
        }
      },
      "testCases": [
        {
          "input": "10, 5",
          "output": "Sum: 15\nDifference: 5\nProduct: 50\nQuotient: 2.00",
          "isVisible": true
        },
        {
          "input": "20, 4",
          "output": "Sum: 24\nDifference: 16\nProduct: 80\nQuotient: 5.00",
          "isVisible": true
        }
      ],
      "marks": 10,
      "difficulty": "easy",
      "tags": ["variables", "input-output", "arithmetic"],
      "timeLimit": 1,
      "memoryLimit": 256,
      "type": "coding_challenge",
      "category": "Python Programming",
      "instructions": "Write a solution that handles all test cases efficiently"
    },
    {
      "title": "String Methods Practice",
      "description": "Working with various string methods",
      "problemStatement": "Write a program that takes a string and performs these operations:\n1. Convert to uppercase\n2. Remove leading/trailing spaces\n3. Replace spaces with hyphens\n4. Return the count of vowels",
      "constraints": "1 <= string length <= 100\nOnly letters and spaces allowed",
      "allowedLanguages": ["python"],
      "languageImplementations": {
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# No additional code needed"
        }
      },
      "testCases": [
        {
          "input": "  hello world  ",
          "output": "HELLO-WORLD (3 vowels)",
          "isVisible": true
        },
        {
          "input": "Python Programming",
          "output": "PYTHON-PROGRAMMING (4 vowels)",
          "isVisible": true
        }
      ],
      "marks": 10,
      "difficulty": "easy",
      "tags": ["strings", "string-methods"],
      "timeLimit": 1,
      "memoryLimit": 256,
      "type": "coding_challenge",
      "category": "Python Programming",
      "instructions": "Write a solution that handles all test cases efficiently"
    },
    {
      "title": "Range and Loops",
      "description": "Pattern printing using nested loops",
      "problemStatement": "Write a program that takes a number n and prints a right-angled triangle pattern of numbers from 1 to n. Each row should contain numbers in sequence.",
      "constraints": "1 <= n <= 9",
      "allowedLanguages": ["python"],
      "languageImplementations": {
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# No additional code needed"
        }
      },
      "testCases": [
        {
          "input": "3",
          "output": "1\n1 2\n1 2 3",
          "isVisible": true
        },
        {
          "input": "4",
          "output": "1\n1 2\n1 2 3\n1 2 3 4",
          "isVisible": true
        }
      ],
      "marks": 10,
      "difficulty": "easy",
      "tags": ["loops", "patterns", "nested-loops"],
      "timeLimit": 1,
      "memoryLimit": 256,
      "type": "coding_challenge",
      "category": "Python Programming",
      "instructions": "Write a solution that handles all test cases efficiently"
    },
    {
      "title": "String Method Explorer",
      "description": "Practice with various string methods",
      "problemStatement": "Write a program that takes a string and performs these validations:\n1. Check if it's a number (isdigit)\n2. Check if it's alphanumeric (isalnum)\n3. Find the first occurrence of 'a' (find)\n4. Convert to title case\nReturn results in specified format.",
      "constraints": "1 <= string length <= 100",
      "allowedLanguages": ["python"],
      "languageImplementations": {
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# No additional code needed"
        }
      },
      "testCases": [
        {
          "input": "hello123",
          "output": "Digit: False\nAlphanumeric: True\n\"a\" at: -1\nTitle: Hello123",
          "isVisible": true
        },
        {
          "input": "12345",
          "output": "Digit: True\nAlphanumeric: True\n\"a\" at: -1\nTitle: 12345",
          "isVisible": true
        }
      ],
      "marks": 10,
      "difficulty": "easy",
      "tags": ["strings", "string-methods"],
      "timeLimit": 1,
      "memoryLimit": 256,
      "type": "coding_challenge",
      "category": "Python Programming",
      "instructions": "Write a solution that handles all test cases efficiently"
    },
    {
      "title": "Math Functions",
      "description": "Working with math operations and functions",
      "problemStatement": "Write a program that takes three numbers and:\n1. Calculates the power of first number raised to second\n2. Finds the square root of the third number\n3. Returns the absolute value of (first - second)\nFormat output as specified.",
      "constraints": "1 <= numbers <= 100",
      "allowedLanguages": ["python"],
      "languageImplementations": {
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# No additional code needed"
        }
      },
      "testCases": [
        {
          "input": "2, 3, 16",
          "output": "Power: 8.00\nSquare Root: 4.00\nAbsolute Difference: 1",
          "isVisible": true
        },
        {
          "input": "5, 2, 25",
          "output": "Power: 25.00\nSquare Root: 5.00\nAbsolute Difference: 3",
          "isVisible": true
        }
      ],
      "marks": 10,
      "difficulty": "easy",
      "tags": ["math", "functions"],
      "timeLimit": 1,
      "memoryLimit": 256,
      "type": "coding_challenge",
      "category": "Python Programming",
      "instructions": "Write a solution that handles all test cases efficiently"
    },
    {
      "title": "Conditional Grade Calculator",
      "description": "Using conditional statements to determine grades",
      "problemStatement": "Write a program that takes a student's score and returns their grade:\nA: 90-100\nB: 80-89\nC: 70-79\nD: 60-69\nF: Below 60",
      "constraints": "0 <= score <= 100",
      "allowedLanguages": ["python"],
      "languageImplementations": {
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# No additional code needed"
        }
      },
      "testCases": [
        {
          "input": "85",
          "output": "Score: 85, Grade: B",
          "isVisible": true
        },
        {
          "input": "92",
          "output": "Score: 92, Grade: A",
          "isVisible": true
        }
      ],
      "marks": 10,
      "difficulty": "easy",
      "tags": ["conditional-statements"],
      "timeLimit": 1,
      "memoryLimit": 256,
      "type": "coding_challenge",
      "category": "Python Programming",
      "instructions": "Write a solution that handles all test cases efficiently"
    },
    {
      "title": "Quote Types and Formatting",
      "description": "Working with different types of quotes and string formatting",
      "problemStatement": "Write a program that takes a name and age, and creates three strings using:\n1. Single quotes with .format()\n2. Double quotes with f-strings\n3. Triple quotes with multiple lines",
      "constraints": "Name length <= 50, 0 <= age <= 150",
      "allowedLanguages": ["python"],
      "languageImplementations": {
        "python": {
          "visibleCode": "# Write your code here",
          "invisibleCode": "# No additional code needed"
        }
      },
      "testCases": [
        {
          "input": "John, 25",
          "output": "Hello, my name is John\nI am 25 years old\nSummary:\n    Name: John\n    Age: 25",
          "isVisible": true
        }
      ],
      "marks": 10,
      "difficulty": "easy",
      "tags": ["strings", "formatting"],
      "timeLimit": 1,
      "memoryLimit": 256,
      "type": "coding_challenge",
      "category": "Python Programming",
      "instructions": "Write a solution that handles all test cases efficiently"
    }
  ]
}